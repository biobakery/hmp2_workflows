# -*- coding: utf-8 -*-
import os

import cutlass

import anadama.util

from .sixteen import seq_len_mode
from .wgs import default_mims_dict


class settings:
    library_method_text = \
        """ Our method, RNAtag-Seq, utilizes a molecular barcoding strategy
        that generates multiple libraries in a single reaction, lowers
        labor and reagent costs per sample, and produces data on
        prokaryotic and eukaryotic samples that are comparable to
        those generated by traditional strand-specific RNA-seq
        approaches.  Barcoding in RNAtag-Seq is achieved through
        direct ligation of adaptors to RNA, enabling high quality,
        strand-specific, quantitative sequencing of full-length
        transcripts in diverse prokaryotic and eukaryotic species.
        """
    prep_id = "3"
    sequencing_contact = "tpoon@broadintitute.org"
    sequencing_center = "Broad Institute"
    ncbi_taxon_id = "408170" # human gut metagenomes
    lib_layout = "fragment"
    lib_selection = "Random"
    prep_comment = "Broad IBDMDB default WMS dna prep"
    seq_comment = "Raw WMS Sequence set "
    storage_duration = 365 # 1 year in days
    sequencer_model = "Illumina HiSeq"
    

def default_prep(sample):
    maybe_extant_preps = list(sample.wgsDnaPreps())
    if maybe_extant_preps:
        prep = maybe_extant_preps[0]
    else:
        prep = cutlass.SixteenSDnaPrep()
    prep.comment = settings.prep_comment
    prep.ncbi_taxon_id = settings.ncbi_taxon_id
    prep.lib_layout = settings.lib_layout
    prep.lib_selection = settings.lib_selection
    prep.prep_id = settings.prep_id
    prep.mims = default_mims_dict()
    prep.mims['lib_const_meth'] = settings.library_method_text
    prep.sequencing_center = settings.sequencing_center
    prep.sequencing_contact = settings.sequencing_contact
    prep.storage_duration = settings.storage_duration
    prep.links['prepared_from'] = [sample.id]
    return prep



def parse_record(r, sample, fname, md5sum, seqtype="raw"):
    prep = default_prep(sample)
    maybe_seqs = list(prep.raw_seq_sets())
    if maybe_seqs:
        seq = maybe_seqs[0]
    else:
        seq = cutlass.WgsRawSeqSet()
    seq.comment = settings.seq_comment + str(sample)
    seq.checksums = {"md5": md5sum}
    seq.exp_length = seq_len_mode(fname)
    seq.format = anadama.util.guess_seq_filetype(fname)
    seq.format_doc = "Raw WMS "+seq.format
    seq.local_file = fname
    seq.seq_model = settings.sequencer_model
    seq.size = os.stat(fname).st_size
    seq.study = "ibd"
    return (prep, seq)
