
<<label="qc_rna_setup", echo=False>>=
import os
import math

import numpy
import pandas as pd

from biobakery_workflows import utilities, visualizations, files
from hmp2_workflows.utils import viz as hmp2_viz 

from anadama2 import PweaveDocument

document = PweaveDocument()
vars = document.get_vars()
@

<<label="qc_table_generation", echo=False>>=
(dna_paired_columns, dna_orphan_columns), dna_samples, (dna_paired_data, dna_orphan_data) = visualizations.qc_read_counts(document, vars["dna_read_counts"])
dna_microbial_reads, dna_microbial_labels = utilities.microbial_read_proportion_multiple_databases(
    dna_paired_data, dna_paired_columns, dna_orphan_data)

dna_paired_columns = [col.strip() for col in dna_paired_columns]
dna_orphan_columns = [col.strip() for col in dna_orphan_columns]

document.write_table(["Sample"]+dna_paired_columns, dna_samples, dna_paired_data,
    files.ShotGunVis.path("qc_counts_paired", document.data_folder))
document.write_table(["Sample"]+dna_orphan_columns, dna_samples, dna_orphan_data,
    files.ShotGunVis.path("qc_counts_orphan", document.data_folder))
document.write_table(["Sample"]+dna_microbial_labels, dna_samples, 
    dna_microbial_reads, files.ShotGunVis.path("microbial_counts",document.data_folder))

# Need to generate the JSON files for the read count tables we are visualizing
hmp2_viz.convert_table_to_datatables_json(files.ShotGunVis.path('qc_counts_paired', document.data_folder), document.data_folder)
hmp2_viz.convert_table_to_datatables_json(files.ShotGunVis.path('qc_counts_orphan', document.data_folder), document.data_folder)
hmp2_viz.convert_table_to_datatables_json(files.ShotGunVis.path('microbial_counts', document.data_folder), document.data_folder)
@

<div class="tab-pane active" id="qc_tab"> 

## Quality Control

This report section contains information about the quality control processing for all samples. These samples were run through KneadData. 
Samples were first trimmed then filtered using the human genome (hg38). RNA samples where than filtered using the human transcriptome (hg38 mRNA).

Data is organized by paired and orphan reads. When one read in a pair passes a filtering step and the other does not the surviving read is an orphan. 
The tables and plots are annotated as follows:

* **raw**: Untouched fastq reads.
* **trim**: Number of reads remaining after trimming bases with Phred score < 20. If the trimmed reads is <70% of original length then it is removed altogether.
* **hg38**: Number of reads remaining after depleting reads against the human genome (hg38).
* **mRNA**: Number of reads remaining after depleting reads against the human genome (hg38) and the human transcriptome (hg38 mRNA). (RNA samples only)

### RNA Samples Quality Control

#### RNA Samples Tables of Filtered Reads

<div id="qc_filtered_reads">
<table id="qc_filtered_reads_paired_counts_table" class="table table-striped" cellspacing="0" width="100%">
<caption>RNA Paired-end Reads</caption>
<thead>
<tr>
<th>Sample</th>
<th>Raw</th>
<th>Trim</th>
<th>hg38</th>
<th>hg38 mRNA</th>
</tr>
</thead>
</table>

<table id="qc_filtered_reads_orphan_counts_table" class="table table-striped" cellspacing="0" width="100%">
<caption>RNA Orphan Reads</caption>
<thead>
<tr>
<th>Sample</th>
<th>Trim orphan1</th>
<th>Trim orphan2</th>
<th>hg38 orphan1</th>
<th>hg38 orphan2</th>
<th>mRNA orphan1</th>
<th>mRNA orphan2</th>
</tr>
</thead>
</table>

<table id="qc_filtered_reads_microbial_proportion" class="table table-striped" cellspacing="0" width="100%"> 
<caption>RNA Microbial Read Proportion</caption>
<thead>
<tr>
<th>Sample</th>
<th>hg38 / Trim</th>
<th>hg38 / Raw</th>
<th>hg38 mRNA / Raw</th>
</tr>
</thead>
</table>
</div>

Proportion of reads remaining after removing host reads relative to the number of: **i) quality-trimmed reads**, and **ii) raw unfiltered reads**.

### RNA Samples Plots of Filtered Reads

<<label="qc_plotly_setup", echo=False>>=
hmp2_viz.convert_table_to_plotly_barplot_json(files.ShotGunVis.path('qc_counts_paired', 
                                                                    document.data_folder),
                                                document.data_folder)
hmp2_viz.convert_table_to_plotly_barplot_json(files.ShotGunVis.path('qc_counts_orphan', 
                                                                    document.data_folder),
                                                document.data_folder)
@

<div id="qc_filtered_reads_paired_counts_plotly"></div>
<div id="qc_filtered_reads_orphan_counts_plotly"></div>
</div>